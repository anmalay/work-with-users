[{"F:\\react\\react-redux-typescript\\my-app\\src\\index.tsx":"1","F:\\react\\react-redux-typescript\\my-app\\src\\App.tsx":"2","F:\\react\\react-redux-typescript\\my-app\\src\\redux\\store.ts":"3","F:\\react\\react-redux-typescript\\my-app\\src\\redux\\reducer.ts":"4","F:\\react\\react-redux-typescript\\my-app\\src\\Company.tsx":"5","F:\\react\\react-redux-typescript\\my-app\\src\\Departments.tsx":"6","F:\\react\\react-redux-typescript\\my-app\\src\\Teams.tsx":"7","F:\\react\\react-redux-typescript\\my-app\\src\\Workers.tsx":"8","F:\\react\\react-redux-typescript\\my-app\\src\\redux\\actions.ts":"9","F:\\react\\react-redux-typescript\\my-app\\src\\WorkersTransfer.tsx":"10","F:\\react\\react-redux-typescript\\my-app\\src\\WorkerAdd.tsx":"11","F:\\react\\react-redux-typescript\\my-app\\src\\Notification.tsx":"12"},{"size":172,"mtime":1609056910000,"results":"13","hashOfConfig":"14"},{"size":422,"mtime":1610875089748,"results":"15","hashOfConfig":"14"},{"size":3929,"mtime":1610878313352,"results":"16","hashOfConfig":"14"},{"size":2445,"mtime":1610878316677,"results":"17","hashOfConfig":"14"},{"size":480,"mtime":1610870049476,"results":"18","hashOfConfig":"14"},{"size":608,"mtime":1610869771755,"results":"19","hashOfConfig":"14"},{"size":789,"mtime":1610869658190,"results":"20","hashOfConfig":"14"},{"size":2942,"mtime":1610869803219,"results":"21","hashOfConfig":"14"},{"size":1881,"mtime":1610562178872,"results":"22","hashOfConfig":"14"},{"size":1480,"mtime":1610873082979,"results":"23","hashOfConfig":"14"},{"size":3182,"mtime":1610875085628,"results":"24","hashOfConfig":"14"},{"size":348,"mtime":1610987969667,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"128fcsb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"F:\\react\\react-redux-typescript\\my-app\\src\\index.tsx",[],["54","55"],"F:\\react\\react-redux-typescript\\my-app\\src\\App.tsx",[],"F:\\react\\react-redux-typescript\\my-app\\src\\redux\\store.ts",[],"F:\\react\\react-redux-typescript\\my-app\\src\\redux\\reducer.ts",["56"],"import { initialState, IApplicationState } from \"./store\";\r\nimport { IWorkerAction } from \"./actions\";\r\nimport { stat } from \"fs\";\r\n\r\nexport function reducer(\r\n  state: IApplicationState = initialState,\r\n  action: IWorkerAction\r\n): IApplicationState {\r\n  if (action.type === \"ADD_WORKER\") {\r\n    console.log(\"добавить сотрудника\", action.worker);\r\n    return {\r\n      ...state,\r\n      workers: [...state.workers, action.worker],\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE_WORKER\") {\r\n    return {\r\n      ...state,\r\n      workers: state.workers.filter((w) => w.id !== action.workerId),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"TRANSFER_WORKER\") {\r\n    console.log(action, \"asasd\");\r\n\r\n    const { transferWorkers, teamId } = action;\r\n    return {\r\n      ...state,\r\n      workers: state.workers.map((worker) => {\r\n        if (transferWorkers.includes(worker.id)) {\r\n          return { ...worker, teamId };\r\n        }\r\n        return worker;\r\n      }),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"EDIT_WORKER\") {\r\n    const { workerId, name, lastName } = action;\r\n    return {\r\n      ...state,\r\n      workers: state.workers.map((item) => {\r\n        if (item.id === workerId) {\r\n          return { ...item, name, lastName };\r\n        }\r\n        return item;\r\n      }),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SELECTED_TEAM\") {\r\n    return {\r\n      ...state,\r\n      selectedTeamId: action.selectedTeamId,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ADD_NOTIFICATION\") {\r\n    return {\r\n      ...state,\r\n      notification: action.notification,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE_NOTIFICATION\") {\r\n    return {\r\n      ...state,\r\n      notification: null,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n// https://redux.js.org/recipes/usage-with-typescript\r\n\r\n// state === {\r\n//   teams: [...],\r\n//   ...,\r\n//   workers: [\r\n//     {\r\n//       id: 1,\r\n//       name: 'qwe',\r\n//       lastName: 'qwe',\r\n//       teamId: 2,\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'zxc',\r\n//       lastName: 'zxc',\r\n//       teamId: 2,\r\n//     },\r\n//   ]\r\n// }\r\n\r\n// action === {\r\n//   type: \"TRANSFER_WORKER\",\r\n//   teamId: 3,\r\n//   workerId: 2,\r\n// }\r\n\r\n// return {\r\n//   teams: [...],\r\n//   ...,\r\n//   workers: [\r\n//     {\r\n//       id: 1,\r\n//       name: 'qwe',\r\n//       lastName: 'qwe',\r\n//       teamId: 2,\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'zxc',\r\n//       lastName: 'zxc',\r\n//       teamId: 3,\r\n//     },\r\n//   ]\r\n// }\r\n","F:\\react\\react-redux-typescript\\my-app\\src\\Company.tsx",[],"F:\\react\\react-redux-typescript\\my-app\\src\\Departments.tsx",[],"F:\\react\\react-redux-typescript\\my-app\\src\\Teams.tsx",[],["57","58"],"F:\\react\\react-redux-typescript\\my-app\\src\\Workers.tsx",[],"F:\\react\\react-redux-typescript\\my-app\\src\\redux\\actions.ts",["59"],"F:\\react\\react-redux-typescript\\my-app\\src\\WorkersTransfer.tsx",[],"F:\\react\\react-redux-typescript\\my-app\\src\\WorkerAdd.tsx",["60","61"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IApplicationState, IBranchId } from \"./redux/store\";\r\n\r\ninterface IBranchIdProps {\r\n  branchId: IBranchId;\r\n}\r\n\r\ninterface IValues {\r\n  name: string;\r\n  lastName: string;\r\n  team: string;\r\n}\r\n\r\nexport const getKeys = Object.keys as <T extends object>(\r\n  obj: T\r\n) => Array<keyof T>;\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  lastName: \"\",\r\n  team: \"-1\",\r\n} as const;\r\n\r\n// https://formik.org/docs/api/field\r\n\r\nconst validators: { [key in keyof IValues]: (s: string) => boolean } = {\r\n  name: (s) => /^[a-zа-яё\\-]+$/i.test(s),\r\n  lastName: (s) => /^[a-zа-яё\\-]+$/i.test(s),\r\n  team: (s) => /^\\d+$/.test(s),\r\n};\r\n\r\nexport function WorkerAdd({ branchId }: IBranchIdProps) {\r\n  const teams = useSelector((state: IApplicationState) => {\r\n    return state.teams.filter((item) => item.branchId === branchId);\r\n  });\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClick(values: IValues) {\r\n    dispatch({\r\n      type: \"ADD_WORKER\",\r\n      worker: {\r\n        name: values.name,\r\n        lastName: values.lastName,\r\n        teamId: values.team,\r\n        id: Math.random(),\r\n      },\r\n    });\r\n    setValues(initialValues);\r\n  }\r\n\r\n  function handleChange(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setValues((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  const disabled = getKeys(initialValues).some(\r\n    (key) => values[key] === initialValues[key]\r\n  );\r\n\r\n  // const disabled = ([\"name\", \"lastName\", \"team\"] as const).some(\r\n  //   (key) => values[key] === initialValues[key]\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>\r\n          Имя\r\n          <input\r\n            value={values.name}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            style={{\r\n              outline: `2px solid ${\r\n                validators.name(values.name) ? \"green\" : \"red\"\r\n              }`,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Фамиля\r\n          <input\r\n            value={values.lastName}\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Номер бригады\r\n          <select value={values.team} name=\"team\" onChange={handleChange}>\r\n            <option disabled key={-1} value={-1}>\r\n              Номер бригады\r\n            </option>\r\n            {teams.map((item) => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </label>\r\n      </form>\r\n      <button\r\n        disabled={disabled}\r\n        type=\"button\"\r\n        onClick={() => handleClick(values)}\r\n      >\r\n        добавить\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// https://reactjs.org/docs/forms.html#the-select-tag\r\n","F:\\react\\react-redux-typescript\\my-app\\src\\Notification.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":1,"column":39,"nodeType":"68","messageId":"69","endLine":1,"endColumn":49},{"ruleId":"73","severity":1,"message":"74","line":28,"column":26,"nodeType":"75","messageId":"76","endLine":28,"endColumn":27,"suggestions":"77"},{"ruleId":"73","severity":1,"message":"74","line":29,"column":30,"nodeType":"75","messageId":"76","endLine":29,"endColumn":31,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'stat' is defined but never used.","Identifier","unusedVar",["79"],["80"],"'ICompanyId' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["81","82"],["83","84"],"no-global-assign","no-unsafe-negation",{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"88","fix":"92","desc":"90"},"removeEscape",{"range":"93","text":"94"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"95","text":"96"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"97","text":"94"},{"range":"98","text":"96"},[628,629],"",[628,628],"\\",[675,676],[675,675]]